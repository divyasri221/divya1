#include <stdio.h>
#include <math.h>
int gcd(int pn, int e);
int main() {
    int m, n, d, e, val, count1, count2, p, q, i, j, k, pn, op;
    int c = 1;
    printf("\nRSA ALGORITHM");
    printf("\nEnter the Plain Text: ");
    scanf("%d", &m);
    printf("\nKey Generation\n");
    for (p = 2; p <= 180; p++) {
        count1 = 0;
        for (i = 1; i <= p; i++) {
            if (p % i == 0) count1++;
        }
        if (count1 != 2) continue;  
        for (q = p + 1; q <= 180; q++) {
            count2 = 0;
            for (i = 1; i <= q; i++) {
                if (q % i == 0) count2++;
            }
            if (count2 != 2) continue;  
            if (p * q > m) {
                goto prime_found;
            }
        }
    }
prime_found:
    printf("\n1. Prime numbers: p = %d, q = %d", p, q);
    n = p * q;
    printf("\n2. n = %d", n);
    pn = (p - 1) * (q - 1);
    printf("\n3. phi(n) = %d", pn);
    for (e = 2; e < pn; e++) {
        if (gcd(pn, e) == 1) {
            goto e_found;
        }
    }
e_found:
    printf("\n4. e = %d", e);
    for (d = 1; d < pn; d++) {
        if ((d * e) % pn == 1) {
            goto d_found;
        }
    }
d_found:
    printf("\n5. d = %d", d);
    printf("\nEncryption\nCipher text is: ");
    k = 1;
    for (i = 1; i <= e / 2; i++) {
        c = ((int)pow(m, 2)) % n;
        k = k * c;
        k = k % n;
    }
    if (e % 2 != 0) {
        k = k * (m % n);
    }
    c = k % n;
    printf("%d", c);
    printf("\nDecryption\nPlain text is: ");
    k = 1;
    for (i = 1; i <= d / 2; i++) {
        op = ((int)pow(c, 2)) % n;
        k = k * op;
        k = k % n;
    }
    if (d % 2 != 0) {
        k = k * (c % n);
    }
    printf("%d", k % n);
    return 0;
}
int gcd(int pn, int e) {
    int j, c = 1;
    for (j = 1; j <= pn; j++) {
        if ((pn % j == 0) && (e % j == 0)) {
            c = j;
        }
    }
    return c;}
